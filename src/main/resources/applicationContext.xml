<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- Scan components (services, mappers, etc.), excluding controllers -->
    <context:component-scan base-package="com.muybaby.food">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- Enable annotation-based transaction management -->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- Load properties files. Consider making 'ignore-*' false in production to catch missing files/properties -->
    <context:property-placeholder location="classpath:jdbc.properties, classpath:upload.properties" ignore-resource-not-found="false" ignore-unresolvable="false"/>
    
    <!-- Configure Druid DataSource with enhanced properties -->
    <bean class="com.alibaba.druid.pool.DruidDataSource" id="poolDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        
        <!-- Basic Pool Settings - Tune these based on load testing -->
        <property name="initialSize" value="5"/> <!-- Initial connections -->
        <property name="minIdle" value="5"/>   <!-- Minimum idle connections -->
        <property name="maxActive" value="20"/>  <!-- Maximum active connections (tune carefully) -->
        <property name="maxWait" value="60000"/> <!-- Max wait time for connection (ms) -->

        <!-- Connection Validation/Eviction Settings -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/> <!-- Check interval (ms) -->
        <property name="minEvictableIdleTimeMillis" value="300000"/> <!-- Min idle time before eviction (ms) -->
        <property name="validationQuery" value="SELECT 1"/> <!-- Query to validate connections -->
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/> <!-- Avoid testing on borrow if testWhileIdle is true -->
        <property name="testOnReturn" value="false"/>

        <!-- Prevent connection leaks -->
        <property name="removeAbandoned" value="true"/>
        <property name="removeAbandonedTimeout" value="1800"/> <!-- Timeout in seconds (30 mins) -->
        <property name="logAbandoned" value="true"/> <!-- Log abandoned connections -->

        <!-- Optional: Configure Druid filters (e.g., for monitoring, SQL injection defense) -->
        <!-- 
        <property name="filters" value="stat,wall,log4j2" /> 
        <property name="connectionProperties" value="druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000" />
        -->
    </bean>

    <!-- Configure MyBatis SqlSessionFactory -->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="dataSource" ref="poolDataSource"/>
        <property name="mapperLocations" value="classpath:mapper/*.xml"/> <!-- Changed from /**.xml -->
        <!-- Optional: Define type aliases package here instead of mybatis-config.xml -->
        <!-- <property name="typeAliasesPackage" value="com.muybaby.food.bean, com.muybaby.food.dto"/> -->
    </bean>

    <!-- Configure MapperScannerConfigurer -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" id="mapperScannerConfigurer">
        <property name="basePackage" value="com.muybaby.food.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"/>
    </bean>

    <!-- Configure Spring TransactionManager -->
    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
        <property name="dataSource" ref="poolDataSource"/>
    </bean>

    <!-- AOP configuration for transactions is REMOVED. Use @Transactional annotations on service methods instead. -->
    <!-- 
    <tx:advice id="txAdvice" transaction-manager="transactionManager">...</tx:advice>
    <aop:config>...</aop:config> 
    -->

</beans>