# JDBC Properties for MySQL Connection

# 1. JDBC Driver Class Name:
jdbc.driverClassName=com.mysql.cj.jdbc.Driver

# 2. JDBC Connection URL:
#    Includes serverTimezone (consider UTC), useUnicode, and characterEncoding.
#    Replace localhost:3306/food with your actual database host, port, and name for production.
jdbc.url=jdbc:mysql://localhost:3306/food?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=UTF-8
# Example using UTC timezone:
# jdbc.url=jdbc:mysql://localhost:3306/food?serverTimezone=UTC&useUnicode=true&characterEncoding=UTF-8

# 3. Database Username:
#    Replace 'root' with your actual MySQL username.
#    *** SECURITY WARNING: DO NOT store production passwords directly in this file! ***
#    *** Use environment variables, secrets management, or JNDI instead. ***
#    Example using environment variable: jdbc.username=${DB_USERNAME}
jdbc.username=root

# 4. Database Password:
#    Replace '123456' with your actual MySQL password.
#    *** SECURITY WARNING: DO NOT store production passwords directly in this file! ***
#    *** Use environment variables, secrets management, or JNDI instead. ***
#    Example using environment variable: jdbc.password=${DB_PASSWORD}
jdbc.password=123456


# ------------------------------------------------------------------
#  Security Recommendations:
# ------------------------------------------------------------------
# 1.  Environment Variables: Set DB_USERNAME and DB_PASSWORD environment variables on your server.
#     In applicationContext.xml, ensure Spring can resolve environment variables.
# 2.  Secrets Management: Use tools like HashiCorp Vault, AWS Secrets Manager, etc.
# 3.  JNDI: Configure the DataSource in your application server and look it up via JNDI.
# ------------------------------------------------------------------